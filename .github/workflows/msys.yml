name: MSYS2
on: [push, pull_request]

jobs:
  mingw:
    # enable, for easy toggling on an off
    if: true
    name: mingw
    runs-on: windows-latest
    strategy:
      matrix:
        #fail-fast: false
        include:
          - { icon: 'ðŸŸ¦', sys: mingw64, pg_major: '15.2', version: 'postgresql-15' }
          #- { icon: 'ðŸŸ¨', sys: ucrt64  } # Experimental!
          #- { icon: 'ðŸŸ§', sys: clang64, pg_major: '15.2', version: 'postgresql-15' } # Experimental!
    defaults:
      run:
        shell: msys2 {0}
    steps:
      # see https://github.com/msys2/setup-msys2
    - name: checkout
      uses: actions/checkout@v2
    - name: '${{ matrix.icon }} Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.sys }}
        update: true
        install: >-
          unzip
        pacboy: >-
          toolchain:p
          json-c:p
          rust:p
          clang:p

    - name: Install PostgreSQL
      run: |
        curl https://get.enterprisedb.com/postgresql/postgresql-${{ matrix.pg_major }}-1-windows-x64-binaries.zip --output pgsql.zip
        unzip -q pgsql.zip
        echo "PGPATH=$PWD/pgsql" >> $GITHUB_ENV
        ls $PWD/pgsql

    - name: Install cargo-pgrx
      run: cargo install --path cargo-pgrx/ --debug --force --locked

    - name: Run 'cargo pgrx init' against system-level ${{ matrix.version }}
      run: |
        export PGUSER=postgres
        whoami
        export PG_VER=$(echo ${{ matrix.version }} | cut -d '-' -f2)
        export PATH=${PATH}:$PWD/pgsql/bin:$PWD/pgsql/include
        cargo pgrx init --pg$PG_VER pg_config

    - name: Run pgrx-tests
      run: |
        export PG_VER=$(echo ${{ matrix.version }} | cut -d '-' -f2)
        export PATH=${PATH}:$PWD/pgsql/bin:$PWD/pgsql/include
        cargo test --features pg${PG_VER} 
          --package cargo-pgrx \
          --package pgrx \
          --package pgrx-macros \
          --package pgrx-sql-entity-graph
    
